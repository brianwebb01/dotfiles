" Example Vim configuration.
" Copy or symlink to ~/.vimrc or ~/_vimrc.

set nocompatible                  " Must come first because it changes other options.

" Function to get the git current branch
function! GitBranch()
  let branch = system("git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* //'")
  if branch != ''
    return substitute(branch, '\n', '', 'g')
  endif
  return ''
endfunction

" Funciton to get the git dirty, clean or ahead status
function! GitStatus()
  let clean = system("git status 2> /dev/null |grep -v ^# |grep 'working directory clean' | wc -l")
  if clean == '1'
    return '✓'  "clean
  else
    let ahead = system("git status 2> /dev/null |grep 'branch is ahead' | wc -l")
    if ahead == '1'
      return '!' "ahead
    else
      return '✗' "dirty
    endif
  endif
endfunction

"FuzzyFinder should ignore all files in .gitignore
let ignorefile = ".gitignore"
if filereadable(ignorefile)

    let ignore = '\v\~$'

    for line in readfile(ignorefile)
        let line = substitute(line, '\.', '\\.', 'g')
        let line = substitute(line, '\*', '.*', 'g')
        let ignore .= '|^' . line
    endfor

    let g:fuf_coveragefile_exclude = ignore
endif


silent! call pathogen#runtime_append_all_bundles()

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.


runtime macros/matchit.vim        " Load the matchit plugin.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location


set t_Co=256

" Tab settings
set tabstop=4                    " Global tab width.
set shiftwidth=4                 " And again, related.
set softtabstop=4                " Sets the number of cols for tab
set expandtab                    " Use spaces instead of tabs
set laststatus=2                  " Show the status line all the time

colorscheme vividchalk

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" Uncomment to use Jamis Buck's file opening plugin
map <Leader>t :FufCoverageFile<Enter>
map <Leader>T :FufBufferTag<Enter>
map <Leader>b :FufBuffer<Enter>

" NERDTree mapping
map <leader>nt :NERDTree<cr>

" Controversial...swap colon and semicolon for easier commands
"nnoremap ; :
"nnoremap : ;

"vnoremap ; :
"vnoremap : ;

" Automatic fold settings for specific files. Uncomment to use.
" autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
autocmd BufNewFile,BufRead *_spec.rb compiler rspec

" Airline plugin settings
set encoding=utf-8 " Necessary to show Unicode glyphs
let g:Powerline_symbols = 'unicode'
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline
let g:airline_theme='badwolf'
let g:airline_enable_branch=1
let g:airline_section_c='%{GitStatus()}'
"let g:airline_section_b='%{airline_current_branch} %{GitStatus()}')
let g:airline_section_x='%t'
let g:airline_section_y='%{getcwd()}'
let g:airline_powerline_fonts = 1

" Breaking arrow keys habit
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
